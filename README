MooseX-StoolPigeon

Create a test file from -- most likely -- another one at higher level.

This module is meant to be used during refactoring sessions.

For example, let there be a Foo L<Moose> class with 'bar' sub. This sub is covered with a test like:

    use Test::More;
    
    my @cases = (
        { stimulus => $whatever, expected => $whatever },
        ...
    );
    
    plan tests => scalar @cases;
    
    use Foo;
    
    my $foo = Foo->new;
        is_deeply ( $foo->bar ( $case->{stimulus}, $case->{expected} );
    }

If for example 'bar' sub calls 'baz' sub (or if a set of 'bar' lines of code can be refactored into 'baz' sub)
then one way to generate a test file at 'baz' boundary using 'bar' stimulus is:

    ...
    
    plan tests => scalar @cases;
    
    use MooseX::StoolPigeon;
    
    my $foo = MooseX::StoolPigeon->new ({ mxsp_class => 'Foo', mxsp_sub => 'baz' });
    
    for my $case ( @cases ) {
        is_deeply ( $foo->bar ( $case->{stimulus}, $case->{expected} );
    }
    
    $foo->mxsp_to_test_file;

Which creates by default t/baz.t test file.

INSTALLATION

To install this module, run the following commands:

	perl Makefile.PL
	make
	make test
	make install

SUPPORT AND DOCUMENTATION

After installing, you can find documentation for this module with the
perldoc command.

    perldoc MooseX::StoolPigeon

You can also look for information at:

    RT, CPAN's request tracker
        http://rt.cpan.org/NoAuth/Bugs.html?Dist=MooseX-StoolPigeon

    AnnoCPAN, Annotated CPAN documentation
        http://annocpan.org/dist/MooseX-StoolPigeon

    CPAN Ratings
        http://cpanratings.perl.org/d/MooseX-StoolPigeon

    Search CPAN
        http://search.cpan.org/dist/MooseX-StoolPigeon/


LICENSE AND COPYRIGHT

Copyright (C) 2011 Xavier Caron

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.

